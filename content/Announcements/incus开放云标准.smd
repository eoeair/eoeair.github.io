---
.title = "incus开放云标准",
.date = @date("2025-07-19T00:00:00"),
.author = "ben0i0d",
.layout = "blog.shtml",
.alternatives = [{ 
    .name = "rss",
    .layout = "blog.xml", 
    .output = "index.xml",
}],
.draft = false,
--- 

目录
1. IaaS
2. PaaS

## IaaS

1. 计算设施：基于incus提供
    * 虚拟化
        * VM：基于KVM的虚拟化
    * 操作系统层虚拟化
        * LXC：linux容器
    * 应用容器
        * OCI：常规oci容器
    * 说明
        1. 操作系统层虚拟化仅支持Linux，由于会与主机共用内核，“特权容器”被禁止，但允许内部嵌套运行oci容器
        2. lxc/oci容器运行时内存分配只需考虑实际服务分配，不要为buffer/cache留出过多内存， 默认启用了Hugepages
        3. 在通常情况下我们使用lxc作为标准运行时，使用oci作为服务运行时，而vm仅作为需要特权内核时的特殊运行时。
        4. 使用lxc/oci的好处至少包括：无性能损失，无额外负担，启动速度更快（s/ms级别）
        5. 默认情况下，仅允许TLS鉴权，以下是两种方法添加鉴权，注意如果服务器不支持webui,则只能通过cli添加鉴权/访问
            1. 在webui生成crt与pfx密钥对，将crt发送至管理员，继续根据页面提示添加pfx，如果需要cli连接，如下所示
            ```
            1. openssl pkcs12 -in NAME.pfx -clcerts -nokeys -out ~/.config/incus/client.crt
            2. openssl pkcs12 -in NAME.pfx -nocerts -nodes -out ~/.config/incus/client.key
            3. incus remote add ALIAS IP/NS --accept-certificate
            ```
            2. 直接执行`incus remote add ALIAS IP/NS`，向管理员索要trust token并添加，启用webui如下所示
            ```
            incus webui
            ```

2. 数据设施：基于ceph提供共享存储 / 基于btrfs提供本地存储
    * Dashboard：基于Web-UI实现管理Ceph的功能
    * OSS（对象存储服务）：兼容Amazon S3与Swift接口
    * btrfs 与 ceph 在用户态接口上保持一致，但是只支持`bs`子集
    * 说明
        1. 存储资源选择指导
            * fs支持多节点读写，读延迟低,带宽表现好,尤其是较大的文件，但写延迟相对较高且延迟时间不稳定，适用于对I/O延迟不大敏感的文件读写,以及非海量的小文件存储支持
            * bs读写延迟双低，适用于对I/O延迟要求较高,且无多个节点同时读写数据需求的应用,例如数据库
            * os是专门用于大数据存储的方案或海量小文件
        2. Crush rule策略：用于制定数据分布的规则
            * 介质性能编码(device_class)：
                * h s n 存储介质与协议，h代表机械磁盘（SAS/SATA协议），s代表固态磁盘（SAS/SATA协议），n也是固态磁盘（NVME协议）
                * s m l e 存储容量,s一般为1T以内,m为1-4T,l为4-12T,e为12T以上
                * h l 综合写入延迟与带宽，h设备代表延迟更低，带宽更高，同介质的读取速度通常是一致的
                * 新设备一般靠近底部设备编号
            * 存储可靠策略编码：
                * `single` 代表类似raid0的不可靠存储
            * 混合设备策略：nvme作为四块机械OSD的WAL/DB，分配容量为4%，固态硬盘不分配WAL/DB
            * 最终Crush rule类似`hll`等命名方式
        3. Pool接口：bs fs os
            * bs：块存储，接口提供`rbd iscsi`
            * fs：文件存储，接口提供 `cephfs nfs`
            * os：对象存储，接口提供`s3 swift`
            * 附加功能后缀:
				1. `data`:一个用于bs（在使用纠删码情况下）/fs的附加后缀，标识该存储池用于数据存储
				2. `metadata`:一个用于bs（在使用纠删码情况下）/fs的附加后缀，标识该存储池用于元数据存储
        4. 存储服务接口与Crush rule组合成为最终用户态名称，这样可以保证存储服务在多个策略中具备平滑层次，以满足多样的数据需求,例如`bs_hll fs_hll`等命名方式

3. 网络设施：通过网络设备（bridge/ovn/sriov）提供网络资源
    * 边界网关负责透明的流量代理，但只代理海外出口流量
        * 代理服务器ip：`192.168.2.1`
        * 端口：
            * http：7890
            * socks5：7891
            * redir：7892
            * mixed：7893
    * 网络服务接口：br ovn sriov
        * 用户态接口使用`Interface-Number`命名方式，例如`br-1`
            * 默认IPv4地址池：10.0.0.Number/24，也就是说默认一个接口提供254个实例接入，这通常足够使用
            * 默认IPv6地址池：默认禁用
        * 默认情况下实例网络接入设备设置为`eth0`
            * 只有vm在需要proxy设备的情况下需要设置静态地址，设置完成后在network会看到两个eth0设备，这只是一种覆盖。设置方法是：在yaml内`devices`下添加
            ```
            eth0:
              ipv4.address: 实例静态ip
              network: 接入网络
              type: nic
            ```
        * proxy设备：
            * 容器（lxc/oci）：`Listen`设置为外部端口（需要满足端口池要求），`connect`设置为内部端口
            * vm：`NAT mode`启用，`Listen`的ip设置为节点主机ip，端口设置为外部端口（需要满足端口池要求），`connect`的ip设置为实例静态ip，端口设置为内部端口
    * 端口池：流量入口必须通过边界网关端口转发得到
        * 系统保留段：0–1023
        * 公共服务接口：1024-2047
        * 自由端口段：2048-3071
        * Minecraft服务器专用：25565–25600
        * 注意：
            1. 请不要使用服务默认端口，例如3306/5432等其余服务的默认端口，这些端口会被infra团队持有以保证对共服务的易用
            2. 边界网关只会转发对应段流量，非法端口会被防火墙拒绝

4. IaaS集群：由单个或多个数据中心组成
    * 数据中心：不依靠外部节点，内部服务完备
        1. 中心服务器集群：CSC，默认情况下是全局服务提供者
    * 说明：
        1. 云存储资源中`bs`、`fs`不可跨数据中心网络使用，对象存储可以跨数据中心网络使用
        2. 节点主机名使用`Arch-Number`命名方式,`Arch`按照debian架构缩写为准，只是将`amd64`简写为`x64`，例如`x64-1`，`aarch64-1`

5. 鉴权服务器
    * oauth2提供者规定为：GitHub。并要求具有eoeair member身份
    * 注意，对于IaaS,包括计算、数据、网络等基础设施当前不接入鉴权服务器

## PaaS

由于incus支持vm、lxc、oci同层调度，k8s/potainer等平台被取消