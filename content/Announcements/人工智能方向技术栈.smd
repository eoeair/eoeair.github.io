---
.title = "人工智能方向技术栈",
.date = @date("2025-08-02T00:00:00"),
.author = "ben0i0d",
.layout = "blog.shtml",
.alternatives = [{ 
    .name = "rss",
    .layout = "blog.xml", 
    .output = "index.xml",
}],
.draft = false,
--- 
## 基础技术栈
1. 系统：Debian（Gnome）
    * 版本：stable
    * 桌面：Gnome，仅根据收集的信息统计得出较kde更为稳定
    * 系统版本可以更换到testing，但务必使用开发容器保证开发环境一致
2. 编程语言：Python
    * 版本：由系统自带工具链给出
3. 环境管理：venv
    * 包管理： pip
4. AI框架：Pytorch
    * 包括AMP
    * 可选DDP并发
5. 内容管理工具：Git
6. 集成开发环境: VScode（本地环境），Jupyterlab（远程环境）

## 进阶技术栈
1. 编程语言:
    * C++：
        * 编译器规定为g++
        * 构建工具规定为xmake
        * 实际编译器与构建由项目自行规定，例如jax构建必须换为clang
    * SQL
2. AI框架:flax/jax
    * 建议对于从零开始的网络使用flax构建
    * flax使用nnx模式
    * 包括未提及的flax生态工具，例如optax、orbax
3. 环境管理:Podman
    * 需要VScode开发容器支持，请安装podman-docker软件包
4. 大数据: duckdb
    * 使用sql语言交互，替代pandas与pyspark

## 自选方向技术栈（仅参考，无强制要求）
1. 原型设计：MATLAB
2. 云计算：K8s，KVM，SDS，SDN
    * K8s建议使用rancher框架
    * Kvm建议使用incus框架
    * SDS建议使用Ceph
    * SDN建议使用ovn
3. 边缘智能：TensorRT，onnx
4. 加速器: FPGA
    * 建议使用xilinx芯片，基于zynq系列
    * 建议使用具有板上内存、Pcie连接的加速卡